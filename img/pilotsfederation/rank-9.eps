%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.10.2 (Build 14C1514) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 2040 2040
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 2040 2040
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0.99215686 0.43921569 0.13333334 sc
q
0 2040 m
2040 2040 l
2040 0 l
0 0 l
h
0 2040 m
W*
1020 555.42572 m
1020 482 l
996 446 l
974 310 l
926.65906 354.07602 l
1020 555.42572 l
1020 482 l
1044 446 l
1066 310 l
1114.5481 355.19998 l
1114.5481 355.19998 l
1020.8641 557.28979 l
1020 555.42572 l
h
921.11176 399.17346 m
768.21442 542.7478 l
768.20435 542.76624 767.55731 543.45947 766.66968 544.49506 c
765.13617 546.28418 763.59515 548.28741 762.17212 550.42206 c
760.02704 553.63965 758.37189 556.83179 757.38422 559.79474 c
757.00037 560.94629 756.64569 562.17584 756.32141 563.4729 c
755.32324 567.46564 754.66229 571.87164 754.29352 576.2973 c
754.16339 577.85913 754.08002 579.30365 754.03424 580.586 c
753.98871 582.5321 753.98871 582.5321 753.97021 583.06 c
753.83856 586.84283 753.76245 589.05157 753.68054 591.45398 c
753.44641 598.31781 753.21228 605.35687 752.99384 612.1709 c
752.9375 613.92834 752.88281 615.65137 752.83002 617.33575 c
752.30743 633.99811 752 645.73969 752 650 c
752 670.93103 744.91327 688.05725 730.48529 702.48529 c
725.14227 707.82831 656.5813 771.70374 543.68842 876.62531 c
502.38077 915.01611 458.51569 955.76251 414.65063 996.49475 c
408.81754 1001.9113 403.14276 1007.1805 397.6463 1012.2839 c
363.76224 1045.0101 335.73706 1072.1185 336 1072 c
294 1118 297.79617 1156 298 1234 c
297.79617 1233.5615 380 1160 380 1160 c
380 1188 l
196 1358 l
152 1402 162.03131 1443.3499 162 1554 c
162.03131 1553.0844 254 1468 254 1468 c
254 1496 l
254 1496 39.724758 1698.1075 40 1698 c
11.402697 1726.9301 5.9999981 1746.7638 6 1908 c
6 1908 360.99704 1585.7216 428.86221 1524.1113 c
429.11655 1492.9973 431.6954 1461.103 437.45566 1430.3098 c
447.28162 1377.7822 465.47009 1334.8879 493.97665 1305.0923 c
493.80692 1298.5172 492.80325 1260.4872 492 1258 c
492.29141 1236.0603 492 1220.4182 492 1214 c
492 1199.691 493.13162 1187.8096 496 1176 c
500.9418 1158.647 509.12961 1143.9177 522 1132 c
530.35767 1124.3558 564.90948 1091.8739 566 1092 c
573.5199 1084.0614 596.82214 1061.8038 608.77484 1050.6072 c
607.9668 1049.6104 607.20593 1048.6665 606.45868 1047.734 c
600.76611 1040.6298 596.53558 1034.9899 593.01581 1029.6888 c
583.9989 1016.1088 579.61938 1004.5137 580.17731 992.45575 c
580.84583 978.00696 588.70093 964.74438 603.99847 951.05713 c
619.80878 936.91101 693.11487 870.5127 805.35883 768.71771 c
850.31201 727.94928 898.20782 684.49872 946.09387 641.0481 c
962.854 625.84039 978.41577 611.71893 992.38043 599.04584 c
997.26807 594.61029 1001.607 590.67261 1005.3473 587.27802 c
1006.2288 586.47803 1006.9052 585.86407 1007.4344 585.38379 c
921.11176 399.17346 l
h
1007.7562 586.078 m
1007.113 586.953 l
1007.6374 585.82172 l
1007.7562 586.078 l
h
1025.0878 609.43909 m
1082 894 l
1132 946 l
1202 946 l
1266 1012 l
1266 1012 1286 1053 1208 1122 c
1208 1188 l
1588.7288 1543.0837 l
1589.5192 1507.4366 1587.309 1470.1501 1580.6818 1434.7228 c
1571.2703 1384.4106 1553.8429 1344.4678 1527.3434 1318.5845 c
1500.0023 1291.8793 1478.9519 1271.692 1460.3884 1254.2572 c
1450.8787 1245.3257 1427.126 1223.3235 1422.1267 1218.6344 c
1413.717 1210.7229 1406.1542 1203.3964 1397.243 1194.4852 c
1357.3813 1154.6237 1359.8271 1102.04 1400.4408 1052.4011 c
1401.7412 1050.8116 1403.0566 1049.2098 1404.7585 1047.142 c
1404.7565 1047.1445 1407.9965 1043.2092 1408.8954 1042.1161 c
1412.1431 1038.166 1414.4114 1035.3835 1416.5406 1032.7264 c
1421.8243 1026.1324 1425.6632 1021.0146 1428.7185 1016.4132 c
1435.1741 1006.6909 1437.8555 999.59155 1437.5767 993.565 c
1437.2489 986.48285 1432.6479 978.71454 1421.7267 968.94287 c
1405.8527 954.73981 1332.585 888.37622 1220.0098 786.28088 c
1175.2916 745.72565 1127.3944 702.27374 1079.507 658.82184 c
1062.7463 643.61371 1047.1842 629.49188 1033.2191 616.81842 c
1030.3109 614.1792 1027.5969 611.71625 1025.0878 609.43909 c
h
1612.877 1525.6902 m
1684.8403 1591.0209 2034 1908 2034 1908 c
2034 1746.7638 2028.5973 1726.9301 2000 1698 c
2000.2753 1698.1075 1786 1496 1786 1496 c
1786 1468 l
1786 1468 1877.9686 1553.0844 1878 1554 c
1877.9686 1443.3499 1888 1402 1844 1358 c
1660 1188 l
1660 1160 l
1660 1160 1742.2039 1233.5615 1742 1234 c
1742.2039 1156 1746 1118 1704 1072 c
1704.2662 1072.12 1675.5375 1044.3328 1641.0889 1011.0623 c
1636.0038 1006.3408 1630.769 1001.4802 1625.4003 996.49475 c
1581.5352 955.76251 1537.67 915.01611 1496.3624 876.62531 c
1383.4695 771.70374 1314.9086 707.82831 1309.5656 702.48529 c
1295.1376 688.05725 1288.0508 670.93103 1288.0508 650 c
1288.0508 645.73969 1287.7434 633.99811 1287.2208 617.33575 c
1287.168 615.65137 1287.1134 613.92834 1287.057 612.1709 c
1286.8385 605.35687 1286.6044 598.31781 1286.3704 591.45398 c
1286.2883 589.05157 1286.2123 586.84283 1286.0807 583.06 c
1286.0621 582.5321 1286.0621 582.5321 1286.0166 580.586 c
1285.9708 579.30365 1285.8875 577.85913 1285.7573 576.2973 c
1285.3885 571.87164 1284.7277 567.46564 1283.7295 563.4729 c
1283.4052 562.17584 1283.0505 560.94629 1282.6666 559.79474 c
1281.679 556.83179 1280.0238 553.63965 1277.8788 550.42206 c
1276.4557 548.28741 1274.9147 546.28418 1273.3812 544.49506 c
1272.4935 543.45947 1271.8464 542.76624 1271.8364 542.7478 c
1120.1078 400.27087 l
1034.2938 585.38379 l
1034.823 585.86407 1035.4995 586.47803 1036.381 587.27802 c
1040.1213 590.67261 1044.4602 594.61029 1049.3478 599.04584 c
1063.3125 611.71893 1078.8743 625.84039 1095.6344 641.0481 c
1143.5204 684.49872 1191.4163 727.94928 1236.3694 768.71771 c
1348.6134 870.5127 1421.9194 936.91101 1437.7299 951.05713 c
1453.0273 964.74438 1460.8824 978.00696 1461.551 992.45575 c
1462.1089 1004.5137 1457.7294 1016.1088 1448.7124 1029.6888 c
1445.1926 1034.9899 1440.9622 1040.6298 1435.2695 1047.734 c
1433.8062 1049.5603 1432.2905 1051.4299 1430.4702 1053.6562 c
1442.9908 1065.4512 1463.1134 1084.73 1470 1092 c
1471.0906 1091.8739 1505.6423 1124.3558 1514 1132 c
1526.8704 1143.9177 1535.0582 1158.647 1540 1176 c
1542.8684 1187.8096 1544 1199.691 1544 1214 c
1544 1220.4182 1543.7086 1236.0603 1544 1258 c
1543.3302 1260.0741 1542.5209 1286.8654 1542.1722 1299.5203 c
1542.8157 1300.1484 1543.4626 1300.7802 1544.1132 1301.4155 c
1574.719 1331.3096 1594.0348 1375.5809 1604.2726 1430.3098 c
1610.1304 1461.6241 1612.6981 1494.0771 1612.877 1525.6902 c
h
1034.0908 585.82172 m
1033.972 586.078 l
1034.6154 586.953 l
1034.0908 585.82172 l
h
1415.2587 1072.3572 m
1427.7449 1084.1246 1447.0447 1102.6461 1454 1110 c
1474.4246 1128.0315 1489.3644 1142.031 1498 1150 c
1514.4539 1165.1512 1520.0397 1186.0082 1520 1214 c
1520.0397 1220.1528 1519.7498 1235.7181 1520 1258 c
1519.658 1258.8813 1519.2596 1267.3397 1518.9089 1276.9177 c
1502.9968 1261.5381 1489.3496 1248.5321 1476.8188 1236.7632 c
1467.2314 1227.7587 1443.4669 1205.7455 1440.407 1202.8774 c
1430.3362 1193.4065 1422.9484 1186.2496 1414.2135 1177.5148 c
1385.0364 1148.3375 1385.5651 1111.3816 1415.2587 1072.3572 c
h
1014.5289 611.35541 m
958 894 l
908 946 l
838 946 l
774 1012 l
774 1012 754 1053 832 1122 c
832 1188 l
452.96646 1541.5028 l
452.27539 1506.3353 454.51721 1469.6268 461.04648 1434.7228 c
470.45801 1384.4106 487.88531 1344.4678 514.38489 1318.5845 c
541.72595 1291.8793 562.77643 1271.692 581.33984 1254.2572 c
590.84955 1245.3257 614.60229 1223.3235 619.60156 1218.6344 c
628.01129 1210.7229 635.57416 1203.3964 644.48529 1194.4852 c
684.34686 1154.6237 681.90112 1102.04 641.28748 1052.4011 c
639.987 1050.8116 638.67157 1049.2098 636.96973 1047.142 c
636.9718 1047.1445 633.73181 1043.2092 632.83295 1042.1161 c
629.58514 1038.166 627.31683 1035.3835 625.18762 1032.7264 c
619.90387 1026.1324 616.065 1021.0146 613.00977 1016.4132 c
606.55426 1006.6909 603.8728 999.59155 604.15161 993.565 c
604.47931 986.48285 609.08032 978.71454 620.00153 968.94287 c
635.87555 954.73981 709.14331 888.37622 821.71844 786.28088 c
866.43658 745.72565 914.33392 702.27374 962.22131 658.82184 c
978.98193 643.61371 994.54407 629.49188 1008.5092 616.81842 c
1010.6194 614.90338 1012.6273 613.08118 1014.5289 611.35541 c
1014.5289 611.35541 l
h
624.04724 1069.2501 m
611.9696 1080.5659 589.60516 1101.959 582 1110 c
561.57544 1128.0315 546.63556 1142.031 538 1150 c
521.54608 1165.1512 515.96027 1186.0082 516 1214 c
515.96027 1220.1528 516.25024 1235.7181 516 1258 c
516.40503 1259.0436 516.88885 1270.7098 517.2793 1282.2798 c
535.60083 1264.5238 550.94812 1249.8757 564.90942 1236.7632 c
574.49689 1227.7587 598.26141 1205.7455 601.32123 1202.8774 c
611.39203 1193.4065 618.77985 1186.2496 627.51471 1177.5148 c
657.46521 1147.5642 656.11438 1109.4172 624.04724 1069.2501 c
624.04724 1069.2501 l
h
730.16913 577.16504 m
650.45148 651.70422 572.02002 725.09222 552 744 c
516 778 513 798 514 822 c
513.48181 834.43628 513.50067 854.92786 513.6391 871.78729 c
518.11871 867.62445 522.56799 863.48962 526.98328 859.38611 c
638.72339 755.53595 708.52185 690.50757 713.51471 685.51471 c
723.43964 675.58978 728 664.56897 728 650 c
728 645.37115 728.30865 633.5827 728.8418 616.58344 c
728.89478 614.89331 728.94965 613.16473 729.00616 611.40186 c
729.22522 604.56989 729.45984 597.51489 729.69446 590.6358 c
729.77661 588.22821 729.85284 586.0144 729.92133 584.04437 c
730.00348 581.68964 730.00348 581.68964 730.00745 581.57745 c
730.00226 580.72125 730.04688 579.16748 730.16925 577.16498 c
730.16913 577.16504 l
h
1309.8848 577.21545 m
1389.5839 651.7373 1467.9845 725.0965 1488 744 c
1524 778 1527 798 1526 822 c
1526.5177 834.42474 1526.4994 854.88989 1526.3613 871.74042 c
1521.8987 867.59344 1517.4663 863.47424 1513.0675 859.38611 c
1401.3275 755.53595 1331.5289 690.50757 1326.5361 685.51471 c
1316.6112 675.58978 1312.0508 664.56897 1312.0508 650 c
1312.0508 645.37115 1311.7422 633.5827 1311.2091 616.58344 c
1311.156 614.89331 1311.1012 613.16473 1311.0447 611.40186 c
1310.8257 604.56989 1310.5909 597.51489 1310.3563 590.6358 c
1310.2743 588.22821 1310.198 586.0144 1310.1295 584.04437 c
1310.0474 581.68964 1310.0474 581.68964 1310.0435 581.57745 c
1310.0486 580.72845 1310.0048 579.19354 1309.8846 577.21533 c
1309.8848 577.21545 l
h
1020 130 m
969.83044 170 971.83728 198 976 220 c
979.86438 242 1010 428 1010 428 c
1020 442 l
1020 442 1020 130 1020 130 c
1070.1696 170 1068.1627 198 1064 220 c
1060.1356 242 1030 428 1030 428 c
1020 442 l
1020 442 1020 130 1020 130 c
h
1020 900 m
1020 704 l
1058 900 l
1020 900 l
h
1020 900 m
1020 704 l
982 900 l
1020 900 l
h
998 1148 m
1020 1132 l
1020 1028 l
980 1062 l
980 1094 l
968 1104 l
986 1310 l
994 1266 l
998 1148 l
h
1042 1148 m
1020 1132 l
1020 1028 l
1060 1062 l
1060 1094 l
1072 1104 l
1054 1310 l
1046 1266 l
1042 1148 l
h
1020 996 m
1020 920 l
966 968 l
874 968 l
898 990 l
962 1000 l
962 1022 l
918 1022 l
944 1046 l
966 1048 l
1020 996 l
h
1020 996 m
1020 920 l
1074 968 l
1166 968 l
1142 990 l
1078 1000 l
1078 1022 l
1122 1022 l
1096 1046 l
1074 1048 l
1020 996 l
h
1020 996 m
W*
0 0 2040 2040 rc
-4 1918 m
2044 1918 l
2044 120 l
-4 120 l
h
f
ep
end
%%Trailer
%%EOF
